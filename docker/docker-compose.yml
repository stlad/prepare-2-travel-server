version: '3.8'

services:
  api-server:
    image: 'prepare2travel:latest'
    build:
        context: prepare2travel
        dockerfile: Dockerfile
    container_name: prepare2travel-server
    depends_on:
       db-service:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/prepare2travel_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    ports:
      - 8080:8080
    networks:
      - prepare2travelNetwork

  db-service:
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "--quiet"]
      interval: 1s
      timeout: 5s
      retries: 10
    image: 'postgres:14.7-alpine'
    container_name: prepare2travel_db
    environment:
      - POSTGRES_DB=prepare2travel_db
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=admin
    ports:
      - "5432:5432"
    networks:
      - prepare2travelNetwork

networks:
  myNetwork:
    name: prepare2travelNetwork
    driver: bridge